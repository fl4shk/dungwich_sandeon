// This file is part of Dunwich Sandgeon.
// 
// Dunwich Sandgeon is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by the
// Free Software Foundation, either version 3 of the License, or (at your
// option) any later version.
// 
// Dunwich Sandgeon is distributed in the hope that it will be useful, but
// WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
// General Public License for more details.
// 
// You should have received a copy of the GNU General Public License along
// with Dunwich Sandgeon.  If not, see <https://www.gnu.org/licenses/>.

#ifndef src_game_engine_screen_class_hpp
#define src_game_engine_screen_class_hpp

// src/game_engine/screen_class.hpp

#include "../misc_includes.hpp"
#include "basic_window_classes.hpp"

namespace dunwich_sandgeon
{

namespace game_engine
{

class Screen final
{
public:		// constants
	// These constants have values in amount of tilemap entries
	//static const DblVec2 SIZE_2D, PLAYFIELD_POS, PLAYFIELD_SIZE_2D;
	static const DblVec2 SIZE_2D;
private:		// variables
	ecs::EntIdVec2d _ent_id_v2d;
public:		// functions
	Screen();
	GEN_CM_BOTH_CONSTRUCTORS_AND_ASSIGN(Screen);
	~Screen();

	inline auto& ent_id_at(const DblVec2& index)
	{
		return _ent_id_v2d.at(index.y).at(index.x);
	}
	inline const auto& ent_id_at(const DblVec2& index) const
	{
		return _ent_id_v2d.at(index.y).at(index.x);
	}
	inline auto& ent_id_at(const DblVec2& index)
	{
		return _ent_id_v2d.at(index.y).at(index.x);
	}
	inline const auto& ent_id_at(const DblVec2& index) const
	{
		return _ent_id_v2d.at(index.y).at(index.x);
	}

	void draw(const Window& win);
	void draw(const LayeredWindow& layered_win);
};

} // namespace game_engine

} // namespace dunwich_sandgeon

#endif		// src_game_engine_screen_class_hpp
